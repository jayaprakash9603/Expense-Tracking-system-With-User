
server:
  port: 6008
  shutdown: graceful

spring:
  application:
    name: CATEGORY-SERVICE
  main:
    allow-bean-definition-overriding: true
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:mysql://localhost:5000/category_service?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  # Add lifecycle configuration for graceful shutdown
  lifecycle:
    timeout-per-shutdown-phase: 30s

  # Add task execution configuration
  task:
    execution:
      shutdown:
        await-termination: true
        await-termination-period: 30s

  # Fix Kafka configuration structure
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      enable-idempotence: true
      properties:
        spring.json.add.type.headers: false
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: category-service-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000ms
      properties:
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval: 5s
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

# Add logging configuration to reduce noise
logging:
  level:
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    org.springframework.cloud: WARN