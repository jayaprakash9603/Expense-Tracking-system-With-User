apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: expense
  labels:
    app: user-service
spec:
  type: NodePort
  selector:
    app: user-service
  ports:
    - name: http
  port: 6001
  targetPort: 6001
  nodePort: 30061
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: expense
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: user-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6001
          volumeMounts:
            - name: user-config
              mountPath: /config
              readOnly: true
          env:
            # Spring Boot basics
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: SERVER_PORT
              value: "6001"
            # Database config
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql.expense.svc.cluster.local:3306/expense_user_service?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            # Eureka registration (local Eureka on host)
            # For Minikube use host.minikube.internal; for Docker Desktop, you may prefer http://host.docker.internal:8761/eureka/
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              value: http://host.minikube.internal:8761/eureka/
            - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
              value: "true"
            # Register as the node IP with NodePort 30080, so services outside the cluster (local gateway) can reach it
            - name: EUREKA_INSTANCE_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: EUREKA_INSTANCE_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: EUREKA_INSTANCE_NONSECUREPORT
              value: "30061"
            # App name for discovery
            - name: SPRING_APPLICATION_NAME
              value: user-service
          # If Actuator isn't enabled, change these probe paths to a basic endpoint like '/actuator/health' or '/'
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 6001
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 6001
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: user-config
          configMap:
            name: user-service-config
